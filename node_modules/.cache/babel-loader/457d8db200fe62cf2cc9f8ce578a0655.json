{"ast":null,"code":"import _initializerDefineProperty from \"/Users/lingessrajoo/Desktop/donuts-domain-registration/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"/Users/lingessrajoo/Desktop/donuts-domain-registration/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/Users/lingessrajoo/Desktop/donuts-domain-registration/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class,\n    _descriptor,\n    _descriptor2,\n    _descriptor3,\n    _descriptor4,\n    _descriptor5,\n    _descriptor6,\n    _descriptor7,\n    _descriptor8,\n    _descriptor9,\n    _descriptor10,\n    _temp,\n    _class3,\n    _temp2,\n    _jsxFileName = \"/Users/lingessrajoo/Desktop/donuts-domain-registration/src/Components/Registry/Registry.tsx\";\n\nimport React, { Component } from \"react\";\nimport { Row, Col, Layout, Select } from \"antd\";\nimport { observable } from \"mobx\";\nimport { observer } from \"mobx-react\";\nimport { SimpleCard } from \"../DefaultComponents/Card\";\nimport { SimpleInput } from \"../DefaultComponents/Input\";\nimport { SimpleButton } from \"../DefaultComponents/Button\";\nimport { Domain } from \"../../models/Domain\";\nimport { verifiedProvidersList } from \"../../Constants/verifiedProviders\";\nimport { operations } from \"../../Constants/domainOperations\";\nimport moment from \"moment\";\nconst {\n  Content\n} = Layout;\nconst {\n  Option\n} = Select;\nlet RegistryVM = (_class = (_temp = class RegistryVM {\n  constructor() {\n    _initializerDefineProperty(this, \"registeredDomains\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"domain\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"operation\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"domainNameError\", _descriptor4, this);\n\n    _initializerDefineProperty(this, \"domainPeriodError\", _descriptor5, this);\n\n    _initializerDefineProperty(this, \"domainContactIDError\", _descriptor6, this);\n\n    _initializerDefineProperty(this, \"displayResponse\", _descriptor7, this);\n\n    _initializerDefineProperty(this, \"domainName\", _descriptor8, this);\n\n    _initializerDefineProperty(this, \"domainExpiration\", _descriptor9, this);\n\n    _initializerDefineProperty(this, \"status\", _descriptor10, this);\n\n    this.handlePeriodChange = value => {\n      this.clearResponse();\n      this.domain.period.unit = value;\n    };\n\n    this.handleProviderChange = value => {\n      this.clearResponse();\n      this.domain.contact.provider = value;\n    };\n\n    this.handleOperationChange = value => {\n      this.clearResponse();\n      this.status = '';\n      this.domain = new Domain();\n      this.operation = value;\n    };\n\n    this.handleSubmit = () => {\n      if (this.operation === \"registration\") {\n        if (this.domain.name.length < 10) {\n          this.domainNameError = \"Domain name must be at least 10 characters long\";\n        }\n\n        if (this.domain.period.value < 1) {\n          this.domainPeriodError = \"Period value must be at least 1 year\";\n        }\n\n        if (!this.domain.contact.id) {\n          this.domainContactIDError = \"Contact ID cannot be empty\";\n        }\n\n        if (this.domain.contact.id && this.domain.contact.id !== this.domain.contact.provider.slice(-3)) {\n          this.domainContactIDError = \"Incorrect ID\";\n        }\n\n        if (this.domainNameError || this.domainPeriodError || this.domainContactIDError) {\n          return;\n        }\n\n        if (this.registeredDomains.find(domain => domain.name === this.domain.name)) {\n          this.status = 'This domain name has already been registered. Please try a different one';\n          return;\n        }\n\n        this.registeredDomains.push(new Domain(this.domain.name, moment(), this.domain.period, this.domain.contact));\n        this.domainName = this.domain.name;\n        this.domainExpiration = moment().add(this.domain.period.value, \"years\").format(\"MMMM Do YYYY\");\n        this.displayResponse = true;\n      }\n\n      if (this.operation === \"renewal\") {\n        if (!this.registeredDomains.find(domain => domain.name === this.domain.name)) {\n          this.status = 'This domain name is not registered. Please register it before renewing the domain.';\n          return;\n        }\n\n        this.status = '';\n        this.registeredDomains.forEach(domain => {\n          if (domain.name === this.domain.name) {\n            domain.registeredDate = moment().add(domain.period.value, \"years\");\n            domain.period.value = this.domain.period.value;\n            this.displayResponse = true;\n            this.domainName = domain.name;\n            this.domainExpiration = domain.registeredDate.add(this.domain.period.value, \"years\").format(\"MMMM Do YYYY\");\n          }\n        });\n      }\n\n      if (this.operation === \"info\") {\n        if (!this.registeredDomains.find(domain => domain.name === this.domain.name)) {\n          this.status = 'This domain name is not registered.';\n          return;\n        }\n\n        this.status = '';\n        this.registeredDomains.forEach(domain => {\n          if (domain.name === this.domain.name) {\n            this.displayResponse = true;\n            this.domainName = domain.name;\n            this.domainExpiration = domain.registeredDate.add(domain.period.value, \"years\").format(\"MMMM Do YYYY\");\n          }\n        });\n      }\n\n      if (this.operation === \"deletion\") {\n        if (!this.registeredDomains.find(domain => domain.name === this.domain.name)) {\n          this.status = 'This domain name is not registered or is no longer registered.';\n          return;\n        }\n\n        const index = this.registeredDomains.findIndex(domain => domain.name === this.domain.name);\n\n        if (index !== -1) {\n          this.registeredDomains.splice(index, 1);\n          this.status = 'Successfully deleted domain';\n        }\n      }\n    };\n\n    this.clearResponse = () => {\n      this.displayResponse = false;\n      this.domainName = \"\";\n      this.domainExpiration = \"\";\n    };\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"registeredDomains\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [];\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"domain\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return new Domain();\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"operation\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return \"registration\";\n  }\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"domainNameError\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return \"\";\n  }\n}), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, \"domainPeriodError\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return \"\";\n  }\n}), _descriptor6 = _applyDecoratedDescriptor(_class.prototype, \"domainContactIDError\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return \"\";\n  }\n}), _descriptor7 = _applyDecoratedDescriptor(_class.prototype, \"displayResponse\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return false;\n  }\n}), _descriptor8 = _applyDecoratedDescriptor(_class.prototype, \"domainName\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return \"\";\n  }\n}), _descriptor9 = _applyDecoratedDescriptor(_class.prototype, \"domainExpiration\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return \"\";\n  }\n}), _descriptor10 = _applyDecoratedDescriptor(_class.prototype, \"status\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return '';\n  }\n})), _class);\n\nlet Registry = observer(_class3 = (_temp2 = class Registry extends Component {\n  constructor(...args) {\n    super(...args);\n    this.vm = new RegistryVM();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      justify: \"center\",\n      align: \"middle\",\n      style: {\n        minHeight: \"100vh\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: 23,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      justify: \"center\",\n      align: \"middle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: 23,\n      sm: 16,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(SimpleCard, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      justify: \"center\",\n      style: {\n        marginBottom: \"20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      span: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 25\n      }\n    }, \"Domain Name Registration\"), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 25\n      }\n    }, \"Domain Operation\"), /*#__PURE__*/React.createElement(Select, {\n      defaultValue: \"registration\",\n      style: {\n        width: \"90%\",\n        borderRadius: \"5px\"\n      },\n      showArrow: false,\n      onChange: this.vm.handleOperationChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 25\n      }\n    }, operations.map(operation => {\n      return /*#__PURE__*/React.createElement(Option, {\n        key: operation,\n        value: operation,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 31\n        }\n      }, operation);\n    })))), this.vm.operation === \"renewal\" && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n      justify: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      span: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(SimpleInput, {\n      title: \"Domain Name\",\n      placeholder: \"Domain Name\",\n      changed: event => {\n        this.vm.clearResponse();\n        this.vm.domainNameError = \"\";\n        this.vm.domain.name = event.target.value;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 29\n      }\n    }), this.vm.domainNameError && /*#__PURE__*/React.createElement(\"h5\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 31\n      }\n    }, this.vm.domainNameError))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      span: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(SimpleInput, {\n      title: \"Period\",\n      placeholder: \"Number of Years\",\n      changed: event => {\n        this.vm.clearResponse();\n        this.vm.domainPeriodError = \"\";\n        this.vm.domain.period.value = Number(event.target.value);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      span: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      justify: \"end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      defaultValue: \"year\",\n      style: {\n        paddingTop: \"30px\",\n        width: \"90%\",\n        borderRadius: \"5px\"\n      },\n      showArrow: false,\n      onChange: this.vm.handlePeriodChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(Option, {\n      value: \"year\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 33\n      }\n    }, \"year\")))), this.vm.domainPeriodError && /*#__PURE__*/React.createElement(\"h5\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 29\n      }\n    }, this.vm.domainPeriodError))), this.vm.operation === \"registration\" && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n      justify: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      span: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(SimpleInput, {\n      title: \"Domain Name\",\n      placeholder: \"Domain Name\",\n      changed: event => {\n        this.vm.clearResponse();\n        this.vm.domainNameError = \"\";\n        this.vm.domain.name = event.target.value;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 29\n      }\n    }), this.vm.domainNameError && /*#__PURE__*/React.createElement(\"h5\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 31\n      }\n    }, this.vm.domainNameError))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      span: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(SimpleInput, {\n      title: \"Period\",\n      placeholder: \"Number of Years\",\n      changed: event => {\n        this.vm.clearResponse();\n        this.vm.domainPeriodError = \"\";\n        this.vm.domain.period.value = Number(event.target.value);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      span: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      justify: \"end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      defaultValue: \"year\",\n      style: {\n        paddingTop: \"30px\",\n        width: \"90%\",\n        borderRadius: \"5px\"\n      },\n      showArrow: false,\n      onChange: this.vm.handlePeriodChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(Option, {\n      value: \"year\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 33\n      }\n    }, \"year\")))), this.vm.domainPeriodError && /*#__PURE__*/React.createElement(\"h5\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 29\n      }\n    }, this.vm.domainPeriodError)), /*#__PURE__*/React.createElement(Row, {\n      justify: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      span: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 29\n      }\n    }, \"Verfied Contact Provider\"), /*#__PURE__*/React.createElement(Select, {\n      defaultValue: \"provider-abc\",\n      style: {\n        width: \"100%\",\n        marginBottom: \"15px\"\n      },\n      showArrow: false,\n      onChange: this.vm.handleProviderChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 29\n      }\n    }, verifiedProvidersList.map(provider => {\n      return /*#__PURE__*/React.createElement(Option, {\n        key: provider,\n        value: provider,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 35\n        }\n      }, provider);\n    })))), /*#__PURE__*/React.createElement(Row, {\n      justify: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      span: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(SimpleInput, {\n      title: `Verified Contact ID (Use '${this.vm.domain.contact.provider.slice(-3)}' as the id)`,\n      placeholder: \"Verified Contact ID\",\n      changed: event => {\n        this.vm.clearResponse();\n        this.vm.domainContactIDError = \"\";\n        this.vm.domain.contact.id = event.target.value;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 29\n      }\n    }), this.vm.domainContactIDError && /*#__PURE__*/React.createElement(\"h5\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 31\n      }\n    }, this.vm.domainContactIDError)))), this.vm.operation === \"deletion\" && /*#__PURE__*/React.createElement(Row, {\n      justify: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      span: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(SimpleInput, {\n      title: \"Domain Name\",\n      placeholder: \"Domain Name\",\n      changed: event => {\n        this.vm.clearResponse();\n        this.vm.domain.name = event.target.value;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 27\n      }\n    }))), this.vm.operation === \"info\" && /*#__PURE__*/React.createElement(Row, {\n      justify: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      span: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(SimpleInput, {\n      title: \"Domain Name\",\n      placeholder: \"Domain Name\",\n      changed: event => {\n        this.vm.clearResponse();\n        this.vm.domain.name = event.target.value;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 27\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      justify: \"center\",\n      style: {\n        marginBottom: \"20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(SimpleButton, {\n      onClick: this.vm.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 23\n      }\n    }, \"Submit\")), /*#__PURE__*/React.createElement(Row, {\n      justify: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 21\n      }\n    }, this.vm.displayResponse && /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 25\n      }\n    }, \"Domain Name: \", this.vm.domainName, \", Domain Expiration:\", \" \", this.vm.domainExpiration), this.vm.status && /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 25\n      }\n    }, this.vm.status)))))))));\n  }\n\n}, _temp2)) || _class3;\n\nexport { Registry as default };","map":{"version":3,"sources":["/Users/lingessrajoo/Desktop/donuts-domain-registration/src/Components/Registry/Registry.tsx"],"names":["React","Component","Row","Col","Layout","Select","observable","observer","SimpleCard","SimpleInput","SimpleButton","Domain","verifiedProvidersList","operations","moment","Content","Option","RegistryVM","handlePeriodChange","value","clearResponse","domain","period","unit","handleProviderChange","contact","provider","handleOperationChange","status","operation","handleSubmit","name","length","domainNameError","domainPeriodError","id","domainContactIDError","slice","registeredDomains","find","push","domainName","domainExpiration","add","format","displayResponse","forEach","registeredDate","index","findIndex","splice","Registry","vm","render","minHeight","marginBottom","width","borderRadius","map","event","target","color","Number","paddingTop"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Row, Col, Layout, Select } from \"antd\";\nimport { observable } from \"mobx\";\nimport { observer } from \"mobx-react\";\nimport { SimpleCard } from \"../DefaultComponents/Card\";\nimport { SimpleInput } from \"../DefaultComponents/Input\";\nimport { SimpleButton } from \"../DefaultComponents/Button\";\nimport { Domain, periodUnit, verifiedProvider } from \"../../models/Domain\";\nimport { verifiedProvidersList } from \"../../Constants/verifiedProviders\";\nimport { operations } from \"../../Constants/domainOperations\";\nimport moment from \"moment\";\nconst { Content } = Layout;\nconst { Option } = Select;\n\ntype domainOperation = \"registration\" | \"renewal\" | \"deletion\" | \"info\";\n\nclass RegistryVM {\n  @observable registeredDomains: Domain[] = [];\n  @observable domain: Domain = new Domain();\n  @observable operation: domainOperation = \"registration\";\n  @observable domainNameError: string = \"\";\n  @observable domainPeriodError: string = \"\";\n  @observable domainContactIDError: string = \"\";\n  @observable displayResponse: boolean = false;\n  @observable domainName: string = \"\";\n  @observable domainExpiration: string = \"\";\n  @observable status: string = '';\n\n  handlePeriodChange = (value: periodUnit) => {\n    this.clearResponse();\n    this.domain.period.unit = value;\n  };\n\n  handleProviderChange = (value: verifiedProvider) => {\n    this.clearResponse();\n    this.domain.contact.provider = value;\n  };\n\n  handleOperationChange = (value: domainOperation) => {\n    this.clearResponse();\n    this.status = '';\n    this.domain = new Domain();\n    this.operation = value;\n  };\n\n  handleSubmit = () => {\n    if (this.operation === \"registration\") {\n      if (this.domain.name.length < 10) {\n        this.domainNameError =\n          \"Domain name must be at least 10 characters long\";\n      }\n      if (this.domain.period.value < 1) {\n        this.domainPeriodError = \"Period value must be at least 1 year\";\n      }\n      if (!this.domain.contact.id) {\n        this.domainContactIDError = \"Contact ID cannot be empty\";\n      }\n      if(this.domain.contact.id && this.domain.contact.id !== this.domain.contact.provider.slice(-3)){\n        this.domainContactIDError = \"Incorrect ID\"\n      }\n      if (\n        this.domainNameError ||\n        this.domainPeriodError ||\n        this.domainContactIDError\n      ) {\n        return;\n      }\n      if(this.registeredDomains.find(domain => domain.name === this.domain.name)){\n        this.status = 'This domain name has already been registered. Please try a different one'\n        return\n      }\n      this.registeredDomains.push(\n        new Domain(\n          this.domain.name,\n          moment(),\n          this.domain.period,\n          this.domain.contact\n        )\n      );\n      this.domainName = this.domain.name;\n      this.domainExpiration = moment()\n        .add(this.domain.period.value, \"years\")\n        .format(\"MMMM Do YYYY\");\n      this.displayResponse = true;\n    }\n    if (this.operation === \"renewal\") {\n      if(!this.registeredDomains.find(domain => domain.name === this.domain.name)){\n        this.status = 'This domain name is not registered. Please register it before renewing the domain.'\n        return\n      }\n      this.status=''\n      this.registeredDomains.forEach(domain => {\n        if (domain.name === this.domain.name) {\n          domain.registeredDate = moment().add(domain.period.value, \"years\");\n          domain.period.value = this.domain.period.value;\n          this.displayResponse = true;\n          this.domainName = domain.name;\n          this.domainExpiration = domain.registeredDate\n            .add(this.domain.period.value, \"years\")\n            .format(\"MMMM Do YYYY\");\n        }\n      });\n    }\n    if (this.operation === \"info\") {\n      if(!this.registeredDomains.find(domain => domain.name === this.domain.name)){\n        this.status = 'This domain name is not registered.'\n        return\n      }\n      this.status=''\n      this.registeredDomains.forEach(domain => {\n        if (domain.name === this.domain.name) {\n          this.displayResponse = true;\n          this.domainName = domain.name;\n          this.domainExpiration = domain.registeredDate\n            .add(domain.period.value, \"years\")\n            .format(\"MMMM Do YYYY\");\n        }\n      });\n    }\n    if (this.operation === \"deletion\") {\n      if(!this.registeredDomains.find(domain => domain.name === this.domain.name)){\n        this.status = 'This domain name is not registered or is no longer registered.'\n        return\n      }\n      const index = this.registeredDomains.findIndex(\n        domain => domain.name === this.domain.name\n      );\n      if (index !== -1) {\n        this.registeredDomains.splice(index, 1);\n        this.status = 'Successfully deleted domain';\n      }\n    }\n  };\n\n  clearResponse = () => {\n    this.displayResponse = false;\n    this.domainName = \"\";\n    this.domainExpiration = \"\";\n  };\n}\n\n@observer\nexport default class Registry extends Component {\n  vm = new RegistryVM();\n\n  render() {\n    return (\n      <Layout>\n        <Content>\n          <Row justify=\"center\" align=\"middle\" style={{ minHeight: \"100vh\" }}>\n            <Col xs={23}>\n              <Row justify=\"center\" align=\"middle\">\n                <Col xs={23} sm={16}>\n                  <SimpleCard>\n                    <Row justify=\"center\" style={{ marginBottom: \"20px\" }}>\n                      <Col span={24}>\n                        <h2>Domain Name Registration</h2>\n                        <h4>Domain Operation</h4>\n                        <Select\n                          defaultValue=\"registration\"\n                          style={{\n                            width: \"90%\",\n                            borderRadius: \"5px\"\n                          }}\n                          showArrow={false}\n                          onChange={this.vm.handleOperationChange}\n                        >\n                          {operations.map(operation => {\n                            return (\n                              <Option key={operation} value={operation}>\n                                {operation}\n                              </Option>\n                            );\n                          })}\n                        </Select>\n                      </Col>\n                    </Row>\n                    {this.vm.operation === \"renewal\" && (\n                      <>\n                        <Row justify=\"center\">\n                          <Col span={24}>\n                            <SimpleInput\n                              title=\"Domain Name\"\n                              placeholder=\"Domain Name\"\n                              changed={event => {\n                                this.vm.clearResponse();\n                                this.vm.domainNameError = \"\";\n                                this.vm.domain.name = event.target.value;\n                              }}\n                            />\n                            {this.vm.domainNameError && (\n                              <h5 style={{ color: \"red\" }}>\n                                {this.vm.domainNameError}\n                              </h5>\n                            )}\n                          </Col>\n                        </Row>\n                        <Row>\n                          <Col span={12}>\n                            <SimpleInput\n                              title=\"Period\"\n                              placeholder=\"Number of Years\"\n                              changed={event => {\n                                this.vm.clearResponse();\n                                this.vm.domainPeriodError = \"\";\n                                this.vm.domain.period.value = Number(\n                                  event.target.value\n                                );\n                              }}\n                            />\n                          </Col>\n                          <Col span={12}>\n                            <Row justify=\"end\">\n                              <Select\n                                defaultValue=\"year\"\n                                style={{\n                                  paddingTop: \"30px\",\n                                  width: \"90%\",\n                                  borderRadius: \"5px\"\n                                }}\n                                showArrow={false}\n                                onChange={this.vm.handlePeriodChange}\n                              >\n                                <Option value=\"year\">year</Option>\n                              </Select>\n                            </Row>\n                          </Col>\n                          {this.vm.domainPeriodError && (\n                            <h5 style={{ color: \"red\" }}>\n                              {this.vm.domainPeriodError}\n                            </h5>\n                          )}\n                        </Row>\n                      </>\n                    )}\n                    {this.vm.operation === \"registration\" && (\n                      <>\n                        <Row justify=\"center\">\n                          <Col span={24}>\n                            <SimpleInput\n                              title=\"Domain Name\"\n                              placeholder=\"Domain Name\"\n                              changed={event => {\n                                this.vm.clearResponse();\n                                this.vm.domainNameError = \"\";\n                                this.vm.domain.name = event.target.value;\n                              }}\n                            />\n                            {this.vm.domainNameError && (\n                              <h5 style={{ color: \"red\" }}>\n                                {this.vm.domainNameError}\n                              </h5>\n                            )}\n                          </Col>\n                        </Row>\n                        <Row>\n                          <Col span={12}>\n                            <SimpleInput\n                              title=\"Period\"\n                              placeholder=\"Number of Years\"\n                              changed={event => {\n                                this.vm.clearResponse();\n                                this.vm.domainPeriodError = \"\";\n                                this.vm.domain.period.value = Number(\n                                  event.target.value\n                                );\n                              }}\n                            />\n                          </Col>\n                          <Col span={12}>\n                            <Row justify=\"end\">\n                              <Select\n                                defaultValue=\"year\"\n                                style={{\n                                  paddingTop: \"30px\",\n                                  width: \"90%\",\n                                  borderRadius: \"5px\"\n                                }}\n                                showArrow={false}\n                                onChange={this.vm.handlePeriodChange}\n                              >\n                                <Option value=\"year\">year</Option>\n                              </Select>\n                            </Row>\n                          </Col>\n                          {this.vm.domainPeriodError && (\n                            <h5 style={{ color: \"red\" }}>\n                              {this.vm.domainPeriodError}\n                            </h5>\n                          )}\n                        </Row>\n                        <Row justify=\"center\">\n                          <Col span={24}>\n                            <h4>Verfied Contact Provider</h4>\n                            <Select\n                              defaultValue=\"provider-abc\"\n                              style={{ width: \"100%\", marginBottom: \"15px\" }}\n                              showArrow={false}\n                              onChange={this.vm.handleProviderChange}\n                            >\n                              {verifiedProvidersList.map(provider => {\n                                return (\n                                  <Option key={provider} value={provider}>\n                                    {provider}\n                                  </Option>\n                                );\n                              })}\n                            </Select>\n                          </Col>\n                        </Row>\n                        <Row justify=\"center\">\n                          <Col span={24}>\n                            <SimpleInput\n                              title={`Verified Contact ID (Use '${this.vm.domain.contact.provider.slice(-3)}' as the id)`} \n                              placeholder=\"Verified Contact ID\"\n                              changed={event => {\n                                this.vm.clearResponse();\n                                this.vm.domainContactIDError = \"\";\n                                this.vm.domain.contact.id = event.target.value;\n                              }}\n                            />\n                            {this.vm.domainContactIDError && (\n                              <h5 style={{ color: \"red\" }}>\n                                {this.vm.domainContactIDError}\n                              </h5>\n                            )}\n                          </Col>\n                        </Row>\n                      </>\n                    )}\n                    {this.vm.operation === \"deletion\" && (\n                      <Row justify=\"center\">\n                        <Col span={24}>\n                          <SimpleInput\n                            title=\"Domain Name\"\n                            placeholder=\"Domain Name\"\n                            changed={event => {\n                              this.vm.clearResponse();\n                              this.vm.domain.name = event.target.value;\n                            }}\n                          />\n                        </Col>\n                      </Row>\n                    )}\n                    {this.vm.operation === \"info\" && (\n                      <Row justify=\"center\">\n                        <Col span={24}>\n                          <SimpleInput\n                            title=\"Domain Name\"\n                            placeholder=\"Domain Name\"\n                            changed={event => {\n                              this.vm.clearResponse();\n                              this.vm.domain.name = event.target.value;\n                            }}\n                          />\n                        </Col>\n                      </Row>\n                    )}\n                    <Row justify=\"center\" style={{ marginBottom: \"20px\" }}>\n                      <SimpleButton onClick={this.vm.handleSubmit}>\n                        Submit\n                      </SimpleButton>\n                    </Row>\n                    <Row justify=\"center\">\n                      {this.vm.displayResponse && (\n                        <h4>\n                          Domain Name: {this.vm.domainName}, Domain Expiration:{\" \"}\n                          {this.vm.domainExpiration}\n                        </h4>\n                      )}\n                      {this.vm.status && (\n                        <h4>{this.vm.status}</h4>\n                      )}\n                    </Row>\n                  </SimpleCard>\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n        </Content>\n      </Layout>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}