{"ast":null,"code":"import _initializerDefineProperty from \"/Users/lingessrajoo/Desktop/donuts-domain-registration/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"/Users/lingessrajoo/Desktop/donuts-domain-registration/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/Users/lingessrajoo/Desktop/donuts-domain-registration/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class,\n    _descriptor,\n    _descriptor2,\n    _descriptor3,\n    _descriptor4,\n    _descriptor5,\n    _descriptor6,\n    _temp,\n    _class3,\n    _temp2,\n    _jsxFileName = \"/Users/lingessrajoo/Desktop/donuts-domain-registration/src/Components/Registry/Registry.tsx\";\n\nimport React, { Component } from \"react\";\nimport { Row, Col, Layout, Select } from \"antd\";\nimport { observable } from \"mobx\";\nimport { observer } from \"mobx-react\";\nimport { SimpleCard } from \"../DefaultComponents/Card\";\nimport { SimpleInput } from \"../DefaultComponents/Input\";\nimport { SimpleButton } from \"../DefaultComponents/Button\";\nimport { Domain } from \"../../models/Domain\";\nimport { verifiedProvidersList } from \"../../Constants/verifiedProviders\";\nimport { operations } from \"../../Constants/domainOperations\";\nconst {\n  Content\n} = Layout;\nconst {\n  Option\n} = Select;\nlet RegistryVM = (_class = (_temp = class RegistryVM {\n  constructor() {\n    _initializerDefineProperty(this, \"registeredDomains\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"domain\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"operation\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"domainNameError\", _descriptor4, this);\n\n    _initializerDefineProperty(this, \"domainPeriodError\", _descriptor5, this);\n\n    _initializerDefineProperty(this, \"domainContactID\", _descriptor6, this);\n\n    this.handlePeriodChange = value => {\n      this.domain.period.unit = value;\n    };\n\n    this.handleProviderChange = value => {\n      this.domain.contact.provider = value;\n    };\n\n    this.handleOperationChange = value => {\n      this.operation = value;\n    };\n\n    this.handleSubmit = () => {\n      if (this.operation === \"registration\") {\n        if (this.domain.name.length < 10) {\n          this.domainNameError = \"Domain name must be at least 10 characters long\";\n        }\n\n        if (!this.domain.period.value) {\n          this.domainPeriodError = \"Period value must be at least 1 year\";\n        }\n\n        if (!this.domain.contact.id) {\n          this.domainContactID = \"Contact ID cannot be empty\";\n        }\n\n        if (this.domainNameError || this.domainPeriodError || this.domainContactID) return;\n      }\n\n      if (this.operation === \"renewal\") {\n        const currDomain = this.registeredDomains.find(domain => this.domain.name === domain.name);\n        console.log(currDomain);\n      }\n    };\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"registeredDomains\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [];\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"domain\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return new Domain();\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"operation\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return \"registration\";\n  }\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"domainNameError\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return \"\";\n  }\n}), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, \"domainPeriodError\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return \"\";\n  }\n}), _descriptor6 = _applyDecoratedDescriptor(_class.prototype, \"domainContactID\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return \"\";\n  }\n})), _class);\n\nlet Registry = observer(_class3 = (_temp2 = class Registry extends Component {\n  constructor(...args) {\n    super(...args);\n    this.vm = new RegistryVM();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      justify: \"center\",\n      align: \"middle\",\n      style: {\n        minHeight: \"100vh\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: 23,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      justify: \"center\",\n      align: \"middle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: 23,\n      sm: 16,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(SimpleCard, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      justify: \"center\",\n      style: {\n        marginBottom: \"20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      span: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }\n    }, \"Domain Name Registration\"), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }\n    }, \"Domain Operation\"), /*#__PURE__*/React.createElement(Select, {\n      defaultValue: \"registration\",\n      style: {\n        width: \"90%\",\n        borderRadius: \"5px\"\n      },\n      showArrow: false,\n      onChange: this.vm.handleOperationChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }\n    }, operations.map(operation => {\n      return /*#__PURE__*/React.createElement(Option, {\n        value: operation,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 31\n        }\n      }, operation);\n    })))), [\"registration\", \"renewal\"].includes(this.vm.operation) && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n      justify: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      span: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(SimpleInput, {\n      title: \"Domain Name\",\n      placeholder: \"Domain Name\",\n      changed: event => {\n        this.vm.domainNameError = \"\";\n        this.vm.domain.name = event.target.value;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 29\n      }\n    }), this.vm.domainNameError && /*#__PURE__*/React.createElement(\"h6\", {\n      style: {\n        color: 'red'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 57\n      }\n    }, this.vm.domainNameError))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      span: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(SimpleInput, {\n      title: \"Period\",\n      placeholder: \"Number of Years\",\n      changed: event => {\n        this.vm.domainPeriodError = \"\";\n        this.vm.domain.period.value = Number(event.target.value);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      span: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      justify: \"end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      defaultValue: \"year\",\n      style: {\n        paddingTop: \"30px\",\n        width: \"90%\",\n        borderRadius: \"5px\"\n      },\n      showArrow: false,\n      onChange: this.vm.handlePeriodChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(Option, {\n      value: \"year\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 33\n      }\n    }, \"year\")))))), this.vm.operation === \"registration\" && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n      justify: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      span: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 29\n      }\n    }, \"Verfied Contact Provider\"), /*#__PURE__*/React.createElement(Select, {\n      defaultValue: \"provider-abc\",\n      style: {\n        width: \"100%\",\n        marginBottom: \"15px\"\n      },\n      showArrow: false,\n      onChange: this.vm.handleProviderChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 29\n      }\n    }, verifiedProvidersList.map(provider => {\n      return /*#__PURE__*/React.createElement(Option, {\n        value: provider,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 35\n        }\n      }, provider);\n    })))), /*#__PURE__*/React.createElement(Row, {\n      justify: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      span: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(SimpleInput, {\n      title: \"Verified Contact ID\",\n      placeholder: \"Verified Contact ID\",\n      changed: event => {\n        this.vm.domainContactID = \"\";\n        this.vm.domain.contact.id = event.target.value;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 29\n      }\n    })))), [\"deletion\", \"info\"].includes(this.vm.operation) && /*#__PURE__*/React.createElement(Row, {\n      justify: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      span: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(SimpleInput, {\n      title: \"Domain Name\",\n      placeholder: \"Domain Name\",\n      changed: event => {\n        this.vm.domain.name = event.target.value;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 27\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      justify: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(SimpleButton, {\n      onClick: this.vm.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 23\n      }\n    }, \"Submit\")))))))));\n  }\n\n}, _temp2)) || _class3;\n\nexport { Registry as default };","map":{"version":3,"sources":["/Users/lingessrajoo/Desktop/donuts-domain-registration/src/Components/Registry/Registry.tsx"],"names":["React","Component","Row","Col","Layout","Select","observable","observer","SimpleCard","SimpleInput","SimpleButton","Domain","verifiedProvidersList","operations","Content","Option","RegistryVM","handlePeriodChange","value","domain","period","unit","handleProviderChange","contact","provider","handleOperationChange","operation","handleSubmit","name","length","domainNameError","domainPeriodError","id","domainContactID","currDomain","registeredDomains","find","console","log","Registry","vm","render","minHeight","marginBottom","width","borderRadius","map","includes","event","target","color","Number","paddingTop"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Row, Col, Layout, Select } from \"antd\";\nimport { observable } from \"mobx\";\nimport { observer } from \"mobx-react\";\nimport { SimpleCard } from \"../DefaultComponents/Card\";\nimport { SimpleInput } from \"../DefaultComponents/Input\";\nimport { SimpleButton } from \"../DefaultComponents/Button\";\nimport { Domain, periodUnit, verifiedProvider } from \"../../models/Domain\";\nimport { DownOutlined } from \"@ant-design/icons\";\nimport { verifiedProvidersList } from \"../../Constants/verifiedProviders\";\nimport { operations } from \"../../Constants/domainOperations\";\nconst { Content } = Layout;\nconst { Option } = Select;\n\ntype domainOperation = \"registration\" | \"renewal\" | \"deletion\" | \"info\";\n\nclass RegistryVM {\n  @observable registeredDomains: Domain[] = [];\n  @observable domain: Domain = new Domain();\n  @observable operation: domainOperation = \"registration\";\n  @observable domainNameError: string = \"\";\n  @observable domainPeriodError: string = \"\";\n  @observable domainContactID: string = \"\";\n\n  handlePeriodChange = (value: periodUnit) => {\n    this.domain.period.unit = value;\n  };\n\n  handleProviderChange = (value: verifiedProvider) => {\n    this.domain.contact.provider = value;\n  };\n\n  handleOperationChange = (value: domainOperation) => {\n    this.operation = value;\n  };\n\n  handleSubmit = () => {\n    if (this.operation === \"registration\") {\n      if (this.domain.name.length < 10) {\n        this.domainNameError =\n          \"Domain name must be at least 10 characters long\";\n      }\n      if (!this.domain.period.value) {\n        this.domainPeriodError = \"Period value must be at least 1 year\";\n      }\n      if (!this.domain.contact.id) {\n        this.domainContactID = \"Contact ID cannot be empty\";\n      }\n      if (\n        this.domainNameError ||\n        this.domainPeriodError ||\n        this.domainContactID\n      )\n        return;\n    }\n    if (this.operation === \"renewal\") {\n      const currDomain = this.registeredDomains.find(\n        domain => this.domain.name === domain.name\n      );\n      console.log(currDomain);\n    }\n  };\n}\n\n@observer\nexport default class Registry extends Component {\n  vm = new RegistryVM();\n\n  render() {\n    return (\n      <Layout>\n        <Content>\n          <Row justify=\"center\" align=\"middle\" style={{ minHeight: \"100vh\" }}>\n            <Col xs={23}>\n              <Row justify=\"center\" align=\"middle\">\n                <Col xs={23} sm={16}>\n                  <SimpleCard>\n                    <Row justify=\"center\" style={{ marginBottom: \"20px\" }}>\n                      <Col span={24}>\n                        <h2>Domain Name Registration</h2>\n                        <h4>Domain Operation</h4>\n                        <Select\n                          defaultValue=\"registration\"\n                          style={{\n                            width: \"90%\",\n                            borderRadius: \"5px\"\n                          }}\n                          showArrow={false}\n                          onChange={this.vm.handleOperationChange}\n                        >\n                          {operations.map(operation => {\n                            return (\n                              <Option value={operation}>{operation}</Option>\n                            );\n                          })}\n                        </Select>\n                      </Col>\n                    </Row>\n                    {[\"registration\", \"renewal\"].includes(\n                      this.vm.operation\n                    ) && (\n                      <>\n                        <Row justify=\"center\">\n                          <Col span={24}>\n                            <SimpleInput\n                              title=\"Domain Name\"\n                              placeholder=\"Domain Name\"\n                              changed={event => {\n                                this.vm.domainNameError = \"\";\n                                this.vm.domain.name = event.target.value;\n                              }}\n                            />\n                            {this.vm.domainNameError && <h6 style={{color: 'red'}}>{this.vm.domainNameError}</h6>}\n                          </Col>\n                        </Row>\n                        <Row>\n                          <Col span={12}>\n                            <SimpleInput\n                              title=\"Period\"\n                              placeholder=\"Number of Years\"\n                              changed={event => {\n                                this.vm.domainPeriodError = \"\";\n                                this.vm.domain.period.value = Number(\n                                  event.target.value\n                                );\n                              }}\n                            />\n                          </Col>\n                          <Col span={12}>\n                            <Row justify=\"end\">\n                              <Select\n                                defaultValue=\"year\"\n                                style={{\n                                  paddingTop: \"30px\",\n                                  width: \"90%\",\n                                  borderRadius: \"5px\"\n                                }}\n                                showArrow={false}\n                                onChange={this.vm.handlePeriodChange}\n                              >\n                                <Option value=\"year\">year</Option>\n                              </Select>\n                            </Row>\n                          </Col>\n                        </Row>\n                      </>\n                    )}\n                    {this.vm.operation === \"registration\" && (\n                      <>\n                        <Row justify=\"center\">\n                          <Col span={24}>\n                            <h4>Verfied Contact Provider</h4>\n                            <Select\n                              defaultValue=\"provider-abc\"\n                              style={{ width: \"100%\", marginBottom: \"15px\" }}\n                              showArrow={false}\n                              onChange={this.vm.handleProviderChange}\n                            >\n                              {verifiedProvidersList.map(provider => {\n                                return (\n                                  <Option value={provider}>{provider}</Option>\n                                );\n                              })}\n                            </Select>\n                          </Col>\n                        </Row>\n                        <Row justify=\"center\">\n                          <Col span={24}>\n                            <SimpleInput\n                              title=\"Verified Contact ID\"\n                              placeholder=\"Verified Contact ID\"\n                              changed={event => {\n                                this.vm.domainContactID = \"\";\n                                this.vm.domain.contact.id = event.target.value;\n                              }}\n                            />\n                          </Col>\n                        </Row>\n                      </>\n                    )}\n                    {[\"deletion\", \"info\"].includes(this.vm.operation) && (\n                      <Row justify=\"center\">\n                        <Col span={24}>\n                          <SimpleInput\n                            title=\"Domain Name\"\n                            placeholder=\"Domain Name\"\n                            changed={event => {\n                              this.vm.domain.name = event.target.value;\n                            }}\n                          />\n                        </Col>\n                      </Row>\n                    )}\n                    <Row justify=\"center\">\n                      <SimpleButton onClick={this.vm.handleSubmit}>Submit</SimpleButton>\n                    </Row>\n                  </SimpleCard>\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n        </Content>\n      </Layout>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}